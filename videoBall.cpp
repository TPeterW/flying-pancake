/*
 * Joey Button
 *
 *
 */

#include <stdio.h>
#include <opencv2/video/background_segm.hpp>
#include "opencv2/opencv.hpp"

// #include <iostream>
// #include <sstream>



using namespace cv;
using namespace std;


Mat frame; //current frame
Mat fgMaskMOG; //fg mask generated by MOG method
// Mat fgMaskMOG2; //fg mask fg mask generated by MOG2 method

BackgroundSubtractorMOG MOG;

const char *win = "video";


void drawCircle(Mat img, Point center)
{
    int thickness = -1;
    int lineType = 8;

    circle( img,
            center,
            32.0,
            Scalar( 255, 255, 255 ),
            thickness,
            lineType);
}

int main()
{
    int cam = 0; // default camera
    VideoCapture cap(cam);
    if (!cap.isOpened()) {
        fprintf(stderr, "cannot open camera %d\n", cam);
        exit(1);
    }

    // namedWindow(win);
    namedWindow(win, 1);
    Mat lastFrame, currentFrame, inputFrame, screen;
    Mat diffImage;  // diff
    Point pt;
    pt.x = 500;
    pt.y = 0;
    // int momentumY = 10;     // initial momentum hardcoded as 10
    // int momentumX = 0;

    cap >> lastFrame;
    cvtColor(lastFrame, lastFrame, CV_BGR2GRAY);

    float threshold = 5.0f;
    // float dist;
    // unsigned char pixel;
    // int x, y;
    //

    double count = 0;
    while (1) {
        cap >> inputFrame;

        MOG(inputFrame, fgMaskMOG);

        // printf("%d\n", diffImage.cols);


        // char *haha;
        // std::cin >> haha;



        imshow(win, fgMaskMOG);

        if (waitKey(10) >= 0) // wait up to 30 msec
	        break;
    }

    return 0;
}

/*
    Mat BGRChannels[3];
    split(screen,BGRChannels); // split the BGR channesl
    BGRChannels[1]=Mat::zeros(screen.rows,screen.cols,CV_8UC1);// removing Green channel
    merge(BGRChannels,3,screen); // pack the image

    waitKey(0);
*/
